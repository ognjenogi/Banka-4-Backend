user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    map $status $loggable {
        ~^[23]  0;
        default 1;
    }

    access_log  /var/log/nginx/access.log main if=$loggable;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    upstream swagger_ui {
        server swagger_ui:8080 fail_timeout=0;
    }

    upstream user_service {
        server user_service:8080 fail_timeout=0;
    }

    upstream exchange_office {
        server exchange_office:8000 fail_timeout=0;
    }

    server {
        listen 0.0.0.0:80;
        listen [::]:80;

        location / {
            # User service.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_pass http://user_service;
        }

        location = /exchange/openapi.yml {
            root /srv;
            default_type application/yaml;
            try_files /exchange-office-openapi.yml =404;
        }

        location /exchange/ {
            # Exchange office service.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://exchange_office/;

            # Enable CORS access to all these routes.  This is a dev
            # configuration.
            add_header 'Access-Control-Allow-Origin' '*';
        }

        location /docs/ui {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_pass http://swagger_ui;
        }
    }
}
